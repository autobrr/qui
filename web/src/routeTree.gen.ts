/*
 * Copyright (c) 2025, s0up and the autobrr contributors.
 * SPDX-License-Identifier: GPL-2.0-or-later
 */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as AuthenticatedBackupsRouteImport } from './routes/_authenticated/backups'
import { Route as AuthenticatedDashboardRouteImport } from './routes/_authenticated/dashboard'
import { Route as AuthenticatedInstancesRouteImport } from './routes/_authenticated/instances'
import { Route as AuthenticatedInstancesInstanceIdRouteImport } from './routes/_authenticated/instances.$instanceId'
import { Route as AuthenticatedInstancesInstanceIdTitlesRouteImport } from './routes/_authenticated/instances.$instanceId.titles'
import { Route as AuthenticatedInstancesIndexRouteImport } from './routes/_authenticated/instances.index'
import { Route as AuthenticatedSettingsRouteImport } from './routes/_authenticated/settings'
import { Route as IndexRouteImport } from './routes/index'
import { Route as LoginRouteImport } from './routes/login'
import { Route as SetupRouteImport } from './routes/setup'

const SetupRoute = SetupRouteImport.update({
  id: '/setup',
  path: '/setup',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedSettingsRoute = AuthenticatedSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedInstancesRoute = AuthenticatedInstancesRouteImport.update({
  id: '/instances',
  path: '/instances',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedDashboardRoute = AuthenticatedDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedBackupsRoute = AuthenticatedBackupsRouteImport.update({
  id: '/backups',
  path: '/backups',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedInstancesIndexRoute =
  AuthenticatedInstancesIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedInstancesRoute,
  } as any)
const AuthenticatedInstancesInstanceIdRoute =
  AuthenticatedInstancesInstanceIdRouteImport.update({
    id: '/$instanceId',
    path: '/$instanceId',
    getParentRoute: () => AuthenticatedInstancesRoute,
  } as any)
const AuthenticatedInstancesInstanceIdTitlesRoute =
  AuthenticatedInstancesInstanceIdTitlesRouteImport.update({
    id: '/titles',
    path: '/titles',
    getParentRoute: () => AuthenticatedInstancesInstanceIdRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/setup': typeof SetupRoute
  '/backups': typeof AuthenticatedBackupsRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/instances': typeof AuthenticatedInstancesRouteWithChildren
  '/settings': typeof AuthenticatedSettingsRoute
  '/instances/$instanceId': typeof AuthenticatedInstancesInstanceIdRouteWithChildren
  '/instances/': typeof AuthenticatedInstancesIndexRoute
  '/instances/$instanceId/titles': typeof AuthenticatedInstancesInstanceIdTitlesRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/setup': typeof SetupRoute
  '/backups': typeof AuthenticatedBackupsRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/settings': typeof AuthenticatedSettingsRoute
  '/instances/$instanceId': typeof AuthenticatedInstancesInstanceIdRouteWithChildren
  '/instances': typeof AuthenticatedInstancesIndexRoute
  '/instances/$instanceId/titles': typeof AuthenticatedInstancesInstanceIdTitlesRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/login': typeof LoginRoute
  '/setup': typeof SetupRoute
  '/_authenticated/backups': typeof AuthenticatedBackupsRoute
  '/_authenticated/dashboard': typeof AuthenticatedDashboardRoute
  '/_authenticated/instances': typeof AuthenticatedInstancesRouteWithChildren
  '/_authenticated/settings': typeof AuthenticatedSettingsRoute
  '/_authenticated/instances/$instanceId': typeof AuthenticatedInstancesInstanceIdRouteWithChildren
  '/_authenticated/instances/': typeof AuthenticatedInstancesIndexRoute
  '/_authenticated/instances/$instanceId/titles': typeof AuthenticatedInstancesInstanceIdTitlesRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/setup'
    | '/backups'
    | '/dashboard'
    | '/instances'
    | '/settings'
    | '/instances/$instanceId'
    | '/instances/'
    | '/instances/$instanceId/backups'
    | '/instances/$instanceId/titles'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/setup'
    | '/backups'
    | '/dashboard'
    | '/settings'
    | '/instances/$instanceId'
    | '/instances'
    | '/instances/$instanceId/backups'
    | '/instances/$instanceId/titles'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/login'
    | '/setup'
    | '/_authenticated/backups'
    | '/_authenticated/dashboard'
    | '/_authenticated/instances'
    | '/_authenticated/settings'
    | '/_authenticated/instances/$instanceId'
    | '/_authenticated/instances/'
    | '/_authenticated/instances/$instanceId/backups'
    | '/_authenticated/instances/$instanceId/titles'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  LoginRoute: typeof LoginRoute
  SetupRoute: typeof SetupRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/setup': {
      id: '/setup'
      path: '/setup'
      fullPath: '/setup'
      preLoaderRoute: typeof SetupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/instances': {
      id: '/_authenticated/instances'
      path: '/instances'
      fullPath: '/instances'
      preLoaderRoute: typeof AuthenticatedInstancesRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/dashboard': {
      id: '/_authenticated/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/backups': {
      id: '/_authenticated/backups'
      path: '/backups'
      fullPath: '/backups'
      preLoaderRoute: typeof AuthenticatedBackupsRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/instances/': {
      id: '/_authenticated/instances/'
      path: '/'
      fullPath: '/instances/'
      preLoaderRoute: typeof AuthenticatedInstancesIndexRouteImport
      parentRoute: typeof AuthenticatedInstancesRoute
    }
    '/_authenticated/instances/$instanceId': {
      id: '/_authenticated/instances/$instanceId'
      path: '/$instanceId'
      fullPath: '/instances/$instanceId'
      preLoaderRoute: typeof AuthenticatedInstancesInstanceIdRouteImport
      parentRoute: typeof AuthenticatedInstancesRoute
    }
    '/_authenticated/instances/$instanceId/titles': {
      id: '/_authenticated/instances/$instanceId/titles'
      path: '/titles'
      fullPath: '/instances/$instanceId/titles'
      preLoaderRoute: typeof AuthenticatedInstancesInstanceIdTitlesRouteImport
      parentRoute: typeof AuthenticatedInstancesInstanceIdRoute
    }
  }
}

interface AuthenticatedInstancesInstanceIdRouteChildren {
  AuthenticatedInstancesInstanceIdTitlesRoute: typeof AuthenticatedInstancesInstanceIdTitlesRoute
}

const AuthenticatedInstancesInstanceIdRouteChildren: AuthenticatedInstancesInstanceIdRouteChildren =
  {
    AuthenticatedInstancesInstanceIdTitlesRoute:
      AuthenticatedInstancesInstanceIdTitlesRoute,
  }

const AuthenticatedInstancesInstanceIdRouteWithChildren =
  AuthenticatedInstancesInstanceIdRoute._addFileChildren(
    AuthenticatedInstancesInstanceIdRouteChildren,
  )

interface AuthenticatedInstancesRouteChildren {
  AuthenticatedInstancesInstanceIdRoute: typeof AuthenticatedInstancesInstanceIdRouteWithChildren
  AuthenticatedInstancesIndexRoute: typeof AuthenticatedInstancesIndexRoute
}

const AuthenticatedInstancesRouteChildren: AuthenticatedInstancesRouteChildren =
  {
    AuthenticatedInstancesInstanceIdRoute:
      AuthenticatedInstancesInstanceIdRouteWithChildren,
    AuthenticatedInstancesIndexRoute: AuthenticatedInstancesIndexRoute,
  }

const AuthenticatedInstancesRouteWithChildren =
  AuthenticatedInstancesRoute._addFileChildren(
    AuthenticatedInstancesRouteChildren,
  )

interface AuthenticatedRouteChildren {
  AuthenticatedBackupsRoute: typeof AuthenticatedBackupsRoute
  AuthenticatedDashboardRoute: typeof AuthenticatedDashboardRoute
  AuthenticatedInstancesRoute: typeof AuthenticatedInstancesRouteWithChildren
  AuthenticatedSettingsRoute: typeof AuthenticatedSettingsRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedBackupsRoute: AuthenticatedBackupsRoute,
  AuthenticatedDashboardRoute: AuthenticatedDashboardRoute,
  AuthenticatedInstancesRoute: AuthenticatedInstancesRouteWithChildren,
  AuthenticatedSettingsRoute: AuthenticatedSettingsRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  LoginRoute: LoginRoute,
  SetupRoute: SetupRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
